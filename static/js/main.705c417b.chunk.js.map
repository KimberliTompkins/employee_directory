{"version":3,"sources":["components/EmployeeTable/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["EmployeeTable","props","scope","name","phone","email","Wrapper","className","children","App","useState","employeeList","employees","setEmployees","searchState","setSearchState","searchTerm","onSubmit","e","preventDefault","findEmployee","filter","employee","value","type","placeholder","id","onChange","target","sortProperty","sorted","sort","a","b","console","log","handleSort","map","key","ReactDOM","render","document","getElementById"],"mappings":"qnFAiBeA,MAdf,SAAuBC,GAEnB,OAEF,+BACE,4BACE,wBAAIC,MAAM,OAAOD,EAAME,MACvB,4BAAKF,EAAMG,OACX,4BAAKH,EAAMI,U,MCJFC,MAJf,SAAiBL,GACf,OAAO,yBAAKM,UAAU,WAAWN,EAAMO,W,OCoF1BC,G,MAjFH,WAAO,IAAD,EACkBC,mBAASC,GAD3B,mBACTC,EADS,KACEC,EADF,OAGsBH,mBAAS,IAH/B,mBAGTI,EAHS,KAGIC,EAHJ,KAIRC,EAAeF,EAAfE,WAJQ,EAMkBN,mBAAS,IAN3B,6BAmChB,OACE,kBAAC,EAAD,KACE,wBAAIH,UAAU,SAAd,sBACA,0BAAMU,SA1Be,SAACC,GACxBA,EAAEC,iBACF,IAAMC,EAAeR,EAAUS,QAC7B,SAACC,GAAD,OAAcA,EAASnB,OAASa,KAElCH,EAAaO,KAsBT,yBAAKb,UAAU,cACb,2BACEgB,MAAOP,EACPb,KAAK,aACLqB,KAAK,OACLjB,UAAU,eACVkB,YAAY,sBACZC,GAAG,SACHC,SAvCgB,SAACT,GAAO,IAAD,EACPA,EAAEU,OAAlBzB,EADuB,EACvBA,KAAMoB,EADiB,EACjBA,MACdR,EAAe,2BAAKD,GAAN,kBAAoBX,EAAOoB,QAuCnC,4BAAQhB,UAAU,wBAAlB,YAGJ,6BACE,yCACA,4BAAQoB,SAAU,SAACT,GAAD,OAlCL,SAACM,GAClB,IAKMK,EALQ,CACZ1B,KAAM,OACNC,MAAO,QACPC,MAAO,SAEkBmB,GAErBM,EAAS,YAAIlB,GAAWmB,MAAK,SAACC,EAAGC,GAAJ,OACjCD,EAAEH,GAAgBI,EAAEJ,GAAgB,GAAK,KAE3CK,QAAQC,IAAIL,GACZjB,EAAaiB,GAsBgBM,CAAWlB,EAAEU,OAAOL,SAC3C,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,WAGJ,2BAAOhB,UAAU,uBACf,+BACE,4BACE,wBAAIL,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,WAGHU,EAAUyB,KAAI,SAACf,GAAD,OACb,kBAAC,EAAD,CACEgB,IAAKhB,EAASI,GACdvB,KAAMmB,EAASnB,KACfC,MAAOkB,EAASlB,MAChBC,MAAOiB,EAASjB,e,MC3E5BkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.705c417b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction EmployeeTable(props) {\n    \n    return (\n  \n  <tbody>\n    <tr>\n      <th scope=\"row\">{props.name}</th>\n      <td>{props.phone}</td>\n      <td>{props.email}</td>\n    </tr>\n  </tbody>\n\n    );\n}\nexport default EmployeeTable;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { useState } from \"react\"; // importing 'useState' to give us the hooks functionality\r\nimport EmployeeTable from \"./components/EmployeeTable\";\r\nimport Wrapper from \"./components/Wrapper\";\r\n// import SearchForm from \"./components/SearchForm\"\r\nimport employeeList from \"./employees.json\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [employees, setEmployees] = useState(employeeList);\r\n\r\n  const [searchState, setSearchState] = useState(\"\");\r\n  const { searchTerm } = searchState;\r\n\r\n  const [sortState, setSortState] = useState([]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearchState({ ...searchState, [name]: value });\r\n  };\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const findEmployee = employees.filter(\r\n      (employee) => employee.name === searchTerm\r\n    );\r\n    setEmployees(findEmployee);\r\n  };\r\n\r\n  const handleSort = (type) => {\r\n    const types = {\r\n      name: \"name\",\r\n      phone: \"phone\",\r\n      email: \"email\",\r\n    };\r\n    const sortProperty = types[type];\r\n\r\n    const sorted = [...employees].sort((a, b) =>\r\n      a[sortProperty] > b[sortProperty] ? 1 : -1\r\n    );\r\n    console.log(sorted);\r\n    setEmployees(sorted);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h1 className=\"title\">Employee Directory</h1>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={searchTerm}\r\n            name=\"searchTerm\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by full name\"\r\n            id=\"search\"\r\n            onChange={handleInputChange}\r\n          />\r\n          <button className=\"btn btn-primary mt-3\">Search</button>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        <h6> sort by:</h6>\r\n        <select onChange={(e) => handleSort(e.target.value)}>\r\n          <option value=\"name\">Name</option>\r\n          <option value=\"phone\">Phone</option>\r\n          <option value=\"email\">Email</option>\r\n        </select>\r\n      </div>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Name </th>\r\n            <th scope=\"col\">Phone</th>\r\n            <th scope=\"col\">Email</th>\r\n          </tr>\r\n        </thead>\r\n        {employees.map((employee) => (\r\n          <EmployeeTable\r\n            key={employee.id}\r\n            name={employee.name}\r\n            phone={employee.phone}\r\n            email={employee.email}\r\n          />\r\n        ))}\r\n      </table>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}